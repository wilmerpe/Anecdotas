{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wilme\\\\ReactAvanzado\\\\FullStack2023\\\\part1\\\\anecdotes\\\\anecdotes1.12\\\\src\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = _ref => {\n  let {\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 30\n  }, this);\n};\n_c = Header;\nconst Button = _ref2 => {\n  let {\n    onClick,\n    text\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 39\n  }, this);\n};\n_c2 = Button;\nconst Anecdote = _ref3 => {\n  let {\n    anecdote\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: anecdote\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 36\n  }, this);\n};\n_c3 = Anecdote;\nconst Votes = _ref4 => {\n  let {\n    votes\n  } = _ref4;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"has \", votes, \" votes\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 30\n  }, this);\n};\n_c4 = Votes;\nconst App = _ref5 => {\n  _s();\n  let {\n    anecdotes\n  } = _ref5;\n  const [selected, setSelected] = useState(0);\n  const [votes, setVotes] = useState(new Array(anecdotes.length).fill(0));\n  const randomAnecdote = () => {\n    let randomNumber = Math.floor(Math.random() * Math.floor(anecdotes.length));\n    setSelected(randomNumber);\n  };\n  const voteForAnecdote = () => {\n    const copy = [...votes];\n    copy[selected] += 1;\n    setVotes(copy);\n  };\n  const highestVotes = Math.max(...votes);\n  const winningAnecdote = anecdotes[votes.indexOf(highestVotes)];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      text: \"Anecdote of the day\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Anecdote, {\n      anecdote: anecdotes[selected]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Votes, {\n      votes: votes[selected]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: voteForAnecdote,\n      text: \"vote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: randomAnecdote,\n      text: \"next anecdote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      text: \"Anecdote with most votes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Anecdote, {\n      anecdote: winningAnecdote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Votes, {\n      votes: highestVotes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"4UjhN1VgRMG8y6dlwyp5RuBH7dk=\");\n_c5 = App;\nconst anecdotes = [\"If it hurts, do it more often\", \"Adding manpower to a late software project makes it later!\", \"The first 90 percent of the code accounts for the first 90 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.\", \"Any fool can write code that a computer can understand. Good programmers write code that humans can understand.\", \"Premature optimization is the root of all evil.\", \"Debugging is twice as hard as writing the code in the first place. Therefore, if you write the coed as cleverly as possibly, you are, by definition, not smart enough to debug it.\"];\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {\n    anecdotes: anecdotes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 53,\n  columnNumber: 3\n}, this));\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"Anecdote\");\n$RefreshReg$(_c4, \"Votes\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["React","useState","ReactDOM","jsxDEV","_jsxDEV","Header","_ref","text","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Button","_ref2","onClick","_c2","Anecdote","_ref3","anecdote","_c3","Votes","_ref4","votes","_c4","App","_ref5","_s","anecdotes","selected","setSelected","setVotes","Array","length","fill","randomAnecdote","randomNumber","Math","floor","random","voteForAnecdote","copy","highestVotes","max","winningAnecdote","indexOf","_c5","root","createRoot","document","getElementById","render","StrictMode","$RefreshReg$"],"sources":["C:/Users/wilme/ReactAvanzado/FullStack2023/part1/anecdotes/anecdotes1.12/src/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\n\nconst Header = ({ text }) => <h1>{text}</h1>;\nconst Button = ({ onClick, text }) => <button onClick={onClick}>{text}</button>;\nconst Anecdote = ({ anecdote }) => <p>{anecdote}</p>;\nconst Votes = ({ votes }) => <p>has {votes} votes</p>;\n\nconst App = ({ anecdotes }) => {\n  const [selected, setSelected] = useState(0);\n  const [votes, setVotes] = useState(new Array(anecdotes.length).fill(0));\n\n  const randomAnecdote = () => {\n    let randomNumber = Math.floor(Math.random() * Math.floor(anecdotes.length));\n    setSelected(randomNumber);\n  };\n\n  const voteForAnecdote = () => {\n    const copy = [...votes];\n    copy[selected] += 1;\n    setVotes(copy);\n  };\n\n  const highestVotes = Math.max(...votes);\n  const winningAnecdote = anecdotes[votes.indexOf(highestVotes)];\n\n  return (\n    <div>\n      <Header text=\"Anecdote of the day\" />\n      <Anecdote anecdote={anecdotes[selected]} />\n      <Votes votes={votes[selected]} />\n      <Button onClick={voteForAnecdote} text=\"vote\" />\n      <Button onClick={randomAnecdote} text=\"next anecdote\" />\n      <Header text=\"Anecdote with most votes\" />\n      <Anecdote anecdote={winningAnecdote} />\n      <Votes votes={highestVotes} />\n    </div>\n  );\n};\n\nconst anecdotes = [\n  \"If it hurts, do it more often\",\n  \"Adding manpower to a late software project makes it later!\",\n  \"The first 90 percent of the code accounts for the first 90 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.\",\n  \"Any fool can write code that a computer can understand. Good programmers write code that humans can understand.\",\n  \"Premature optimization is the root of all evil.\",\n  \"Debugging is twice as hard as writing the code in the first place. Therefore, if you write the coed as cleverly as possibly, you are, by definition, not smart enough to debug it.\"\n];\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App anecdotes={anecdotes} />\n  </React.StrictMode>\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}